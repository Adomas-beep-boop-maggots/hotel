diff --git a/.gitignore b/.gitignore
index f68d109..0683b2b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -26,4 +26,6 @@ bin/
 .vscode/
 
 ### Mac OS ###
-.DS_Store
\ No newline at end of file
+.DS_Store
+
+.idea
\ No newline at end of file
diff --git a/src/Main.java b/src/Main.java
index 372da35..137a01b 100644
--- a/src/Main.java
+++ b/src/Main.java
@@ -4,6 +4,59 @@
 import java.util.ArrayList;
 import java.util.List;
 
+class RoomParameters {
+    private int floorNum;
+    private int capacity;
+    public RoomParameters setFloorNum(int floorNum) {
+        this.floorNum = floorNum;
+        return this;
+    }
+    public RoomParameters setCapacity(int capacity) {
+        this.capacity = capacity;
+        return this;
+    }
+
+    public int getCapacity() {
+        return capacity;
+    }
+
+    public int getFloorNum() {
+        return floorNum;
+    }
+}
+
+class ServiceRoomParameters {
+    private int floorNum;
+    private int parkingCapacity;
+    private String type;
+    public ServiceRoomParameters setFloorNum(int floorNum) {
+        this.floorNum = floorNum;
+        return this;
+    }
+
+    public ServiceRoomParameters setParkingCapacity(int parkingCapacity) {
+        this.parkingCapacity = parkingCapacity;
+        return this;
+    }
+
+    public ServiceRoomParameters setType(String type) {
+        this.type = type;
+        return this;
+    }
+
+    public String getType() {
+        return type;
+    }
+
+    public int getParkingCapacity() {
+        return parkingCapacity;
+    }
+
+    public int getFloorNum() {
+        return floorNum;
+    }
+}
+
 class Hotel {
     private static class Floor {
         private static class Room {
@@ -18,8 +71,10 @@ class Hotel {
 //            int numberAddress;
 //           Service rooms probably don't need a room address...
             String type;
-            ServiceRoom(String type) {
+            int parkingCapacity;
+            ServiceRoom(String type, int parkingCapacity) {
                 this.type = type;
+                this.parkingCapacity = parkingCapacity;
             }
         }
         private List<Room> rooms;
@@ -34,8 +89,8 @@ class Hotel {
             Room newRoom = new Room(capacity, numberAddress);
             rooms.add(newRoom);
         }
-        private void addSericeRoom(String type) {
-            ServiceRoom newServiceRoom = new ServiceRoom(type);
+        private void addSericeRoom(String type, int parkingCapacity) {
+            ServiceRoom newServiceRoom = new ServiceRoom(type, parkingCapacity);
             serviceRooms.add(newServiceRoom);
         }
     }
@@ -67,12 +122,14 @@ class Hotel {
             System.out.println("Invalid floor number.");
         }
     }
+    public void addRoom(RoomParameters roomParameters) {
+        addRoom(roomParameters.getFloorNum(), roomParameters.getCapacity());
+    }
 
-    public void addRoomsBulkCapacity(int floorNum, int numberOfRooms, int capacity) {
+    public void addRoomsBulkCapacity(int floorNum, int capacity, int numberOfRooms) {
         if (floorNum <= floors.size() && numberOfRooms > 0 && floorNum > 0) {
             Floor floor = floors.get(floorNum - 1);
             for (int i = 0; i < numberOfRooms; i++) {
-//                floor.addRoom(capacity, Integer.parseInt(String.valueOf(floorNum) + String.format("%03d", floor.rooms.size())));
                 addRoom(floorNum, capacity);
             }
         } else if (numberOfRooms <= 0) {
@@ -83,16 +140,23 @@ class Hotel {
             System.out.println("Enter Positive number.");
         }
     }
+    public void addRoomsBulkCapacity(RoomParameters roomParameters, int numberOfRooms) {
+        addRoomsBulkCapacity(roomParameters.getFloorNum(), roomParameters.getCapacity(), numberOfRooms);
+    }
 
-    public void addServiceRoom(int floorNum, String type) {
+    public void addServiceRoom(int floorNum, String type, int parkingCapacity) {
         if (floorNum > 0 && floorNum <= floors.size()) {
             Floor floor = floors.get(floorNum - 1);
-            floor.addSericeRoom(type);
+            floor.addSericeRoom(type, parkingCapacity);
         } else {
             System.out.println("Invalid floor number.");
         }
     }
 
+    public void addServiceRoom(ServiceRoomParameters serviceRoomParameters) {
+        addServiceRoom(serviceRoomParameters.getFloorNum(), serviceRoomParameters.getType(), serviceRoomParameters.getParkingCapacity());
+    }
+
     public void printHotel() {
         for (Floor floor : floors) {
             System.out.print("Floor " + (floors.indexOf(floor) + 1));
@@ -108,7 +172,8 @@ class Hotel {
             }
 
             for (Floor.ServiceRoom serviceRoom : floor.serviceRooms) {
-                System.out.println("    Service room: " + serviceRoom.type);
+                System.out.println("    Service room parking capacity: " + serviceRoom.parkingCapacity +
+                        " | Type: "+ serviceRoom.type);
             }
         }
     }
@@ -119,12 +184,17 @@ public class Main {
         Hotel hotel = new Hotel();
         hotel.buildFloors(3);
 
-        hotel.addRoomsBulkCapacity(2,6,2);
-        hotel.addRoomsBulkCapacity(3,4,3);
 
-        hotel.addServiceRoom(1, "Bar");
-        hotel.addServiceRoom(1, "Reception");
-        hotel.addServiceRoom(1, "Parking");
+
+        hotel.addRoomsBulkCapacity(new RoomParameters().setCapacity(2).setFloorNum(6), 6);
+        hotel.addRoomsBulkCapacity(new RoomParameters().setCapacity(2).setFloorNum(6), 4);
+//        hotel.addRoomsBulkCapacity(, 3);
+        hotel.addRoom(new RoomParameters().setCapacity(2).setFloorNum(6));
+
+        hotel.addServiceRoom(1, "Bar", 0);
+        hotel.addServiceRoom(1, "Reception", 0);
+        hotel.addServiceRoom(1, "Parking", 21);
+        hotel.addServiceRoom(new ServiceRoomParameters().setType("Beach").setFloorNum(1).setParkingCapacity(32));
 
         hotel.printHotel();
     }
